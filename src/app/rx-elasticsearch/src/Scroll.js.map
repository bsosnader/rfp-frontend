{"version":3,"file":"Scroll.js","sourceRoot":"","sources":["Scroll.ts"],"names":[],"mappings":";AACA,qBAAyB,iBAAiB,CAAC,CAAA;AAE3C;IAAA;IAiCA,CAAC;IA/BiB,aAAM,GAApB,UAAwB,MAAiC,EAAE,MAA2B;QAElF,IAAI,aAAa,GAAe,MAAM;aACjC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEpB,IAAI,GAAG,GAAG,iBAAU;aACf,WAAW,CAAC,aAAa,CAAC;aAC1B,MAAM,CAAC,UAAC,QAAY;YACb,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;gBAAC,MAAM,CAAC,iBAAU,CAAC,KAAK,EAAK,CAAC;YAClE,MAAM,CAAC,iBAAU,CAAC,WAAW,CAAa,MAAM,CAAC,MAAM,CAAC;gBAChD,QAAQ,EAAE,QAAQ,CAAC,UAAU;gBAC7B,MAAM,EAAE,MAAM,CAAC,MAAM;aACxB,CACJ,CAAC,CAAC;QACP,CAAC,CACJ,CAAC;QAEN,IAAI,SAAS,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACpC,SAAS,CAAC,OAAO,EAAE,CAAC;QAEpB,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAEc,kBAAW,GAA1B,UAA2B,SAAS,EAAE,MAAM;QACxC,SAAS;aACJ,IAAI,EAAE;aACN,SAAS,CAAC,UAAC,QAAY,IAAK,OAAA,MAAM,CAAC,WAAW,CAAC;YAC5C,QAAQ,EAAE,QAAQ,CAAC,UAAU;SAChC,CAAC,EAF2B,CAE3B,CAAC,CAAC;IACZ,CAAC;IACL,aAAC;AAAD,CAAC,AAjCD,IAiCC;AAjCY,cAAM,SAiClB,CAAA","sourcesContent":["import {Scrollable} from './Scrollable';\nimport {Observable} from '@reactivex/rxjs';\n\nexport class Scroll implements Scrollable {\n\n    public static scroll<T>(params:Elasticsearch.SearchParams, client:Elasticsearch.Client):Observable<T> {\n\n        let searchPromise = <Promise<T>>client\n            .search(params);\n\n        let obs = Observable\n            .fromPromise(searchPromise)\n            .expand((response:any) => {\n                    if (response.hits.hits.length === 0) return Observable.empty<T>();\n                    return Observable.fromPromise(<Promise<T>>client.scroll({\n                            scrollId: response._scroll_id,\n                            scroll: params.scroll\n                        }\n                    ));\n                }\n            );\n\n        let published = obs.publish();\n        this.clearScroll(published, client);\n        published.connect();\n\n        return published;\n    }\n\n    private static clearScroll(published, client) {\n        published\n            .last()\n            .subscribe((response:any) => client.clearScroll({\n                scrollId: response._scroll_id\n            }));\n    }\n}"]}